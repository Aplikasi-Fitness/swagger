openapi: 3.0.3
info:
  title: Dokumen API Cloud Function - OpenAPI 3.0
  description: >-
    Dokumen API Cloud Function Aplikasi Workout
  termsOfService: https://aplikasi-fitness.github.io/swagger/
  contact:
    email: farhanriziq01@gmail.com
  license:
    name: Pasetobackend Package
    url1: https://pkg.go.dev/github.com/hp-pinjam/pasetobackend
    url2: https://pkg.go.dev/github.com/hp-pinjam/be_p3
  version: 1.0.1
externalDocs:
  description: Repo backend
  url: http://hp-pinjam.my.id/pasetobackend/
servers:
  - url: https://asia-southeast2-hppinjam.cloudfunctions.net
tags:
  - name: auth
    description: Authentikasi
    externalDocs:
      description: Deskripsi dan Kode Program
      url: http://hp-pinjam.my.id/pasetobackend/
  - name: register
    description: Register Account
    externalDocs:
      description: Deskripsi dan Kode Program
      url: http://hp-pinjam.my.id/pasetobackend/
  - name: Workout
    description: Workout app Operations
    externalDocs:
      description: Deskripsi dan Kode Program
      url: http://hp-pinjam.my.id/pasetobackend/
paths:
  /registeruser:
    post:
      tags:
        - register
      summary: Register User Without Token
      description: Daftar Akun User
      operationId: authService
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/user'
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
        '405':
          description: Invalid input
  # /Login:
  #   post:
  #     tags:
  #       - auth
  #     summary: User Login to Get Token
  #     description: User Login and Get Token
  #     operationId: authService
  #     requestBody:
  #       content:
  #         application/json:
  #           schema:
  #             $ref: '#/components/schemas/Auth'
  #     responses:
  #       '200':
  #         description: successful operation
  #         content:
  #           application/json:
  #             schema:
  #               $ref: '#/components/schemas/AuthResponse'
  #       '405':
  #         description: Invalid input
  /loginn:
    post:
      tags:
        - auth
      summary: Login to Get Token
      description: Login and Get Token using Email and Password
      operationId: LoginService
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AdminAuth'
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthResponse'
        '405':
          description: Invalid input
  /workoutupper:
    post:
      tags:
        - Workout Upper
      summary: Insert Workout 
      description: Insert workout into the database
      operationId: insertWorkout
      security:
        - Login: []  # Menentukan bahwa endpoint ini membutuhkan skema keamanan 'Login'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Workout'
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
        '401':
          description: Unauthorized - Admin not logged in
        '403':
          description: Forbidden - Admin does not have permission
        '405':
          description: Invalid input
  /updateupper:
    put:
      tags:
        - Workout Upper
      summary: Update Workout
      description: Update workout data in the database 
      operationId: updateWorkout
      security:
        - Login: []  # Menentukan bahwa endpoint ini membutuhkan skema keamanan 'Login'
      parameters:
        - name: nomorid
          in: path
          description: ID of the workout to update
          required: true
          schema:
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Workout'
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
        '401':
          description: Unauthorized - Admin not logged in
        '403':
          description: Forbidden - Admin does not have permission
        '404':
          description: Not Found - Workout not found
        '405':
          description: Invalid input
  /getupper:
    get:
      tags:
        - Workout Upper
      summary: Get All Workout
      description: Retrieve all workout data from the database
      operationId: getAllWorkout
      security:
        - Login: []  # Menentukan bahwa endpoint ini membutuhkan skema keamanan 'Login'
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/MobilePhone'
        '401':
          description: Unauthorized - Admin not logged in
        '403':
          description: Forbidden - Admin does not have permission
        '405':
          description: Invalid input
  /deleteupper:
    delete:
      tags:
        - Workout Upper
      summary: Delete Workout by ID
      description: Delete Workout data from the database by ID
      operationId: deleteWorkout
      security:
        - Login: []  # Menentukan bahwa endpoint ini membutuhkan skema keamanan 'Login'
      parameters:
        - name: nomorid
          in: path
          description: ID of the Workout to delete
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
        '401':
          description: Unauthorized - Admin not logged in
        '403':
          description: Forbidden - Admin does not have permission
        '404':
          description: Not Found - Workout not found
        '405':
          description: Invalid input
  /insertdatahp:
    post:
      tags:
        - workout
      summary: Insert Workout 
      description: Insert workout into the database
      operationId: insertWorkout
      security:
        - Login: []  # Menentukan bahwa endpoint ini membutuhkan skema keamanan 'Login'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Workout'
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
        '401':
          description: Unauthorized - Admin not logged in
        '403':
          description: Forbidden - Admin does not have permission
        '405':
          description: Invalid input
  /updatehp:
    put:
      tags:
        - workout
      summary: Update Workout
      description: Update workout data in the database 
      operationId: updateWorkout
      security:
        - Login: []  # Menentukan bahwa endpoint ini membutuhkan skema keamanan 'Login'
      parameters:
        - name: nomorid
          in: path
          description: ID of the workout to update
          required: true
          schema:
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Workout'
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
        '401':
          description: Unauthorized - Admin not logged in
        '403':
          description: Forbidden - Admin does not have permission
        '404':
          description: Not Found - Workout not found
        '405':
          description: Invalid input
  /getdataallhp:
    get:
      tags:
        - workout
      summary: Get All Workout
      description: Retrieve all workout data from the database
      operationId: getAllWorkout
      security:
        - Login: []  # Menentukan bahwa endpoint ini membutuhkan skema keamanan 'Login'
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/MobilePhone'
        '401':
          description: Unauthorized - Admin not logged in
        '403':
          description: Forbidden - Admin does not have permission
        '405':
          description: Invalid input
  /deletehp:
    delete:
      tags:
        - workout
      summary: Delete Workout by ID
      description: Delete Workout data from the database by ID
      operationId: deleteWorkout
      security:
        - Login: []  # Menentukan bahwa endpoint ini membutuhkan skema keamanan 'Login'
      parameters:
        - name: nomorid
          in: path
          description: ID of the Workout to delete
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
        '401':
          description: Unauthorized - Admin not logged in
        '403':
          description: Forbidden - Admin does not have permission
        '404':
          description: Not Found - Workout not found
        '405':
          description: Invalid input
  /workoutlower:
    post:
      tags:
        - Workout Lower
      summary: Insert Workout 
      description: Insert workout into the database
      operationId: insertWorkout
      security:
        - Login: []  # Menentukan bahwa endpoint ini membutuhkan skema keamanan 'Login'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Workout'
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
        '401':
          description: Unauthorized - Admin not logged in
        '403':
          description: Forbidden - Admin does not have permission
        '405':
          description: Invalid input
  /updatelower:
    put:
      tags:
        - Workout Lower
      summary: Update Workout
      description: Update workout data in the database 
      operationId: updateWorkout
      security:
        - Login: []  # Menentukan bahwa endpoint ini membutuhkan skema keamanan 'Login'
      parameters:
        - name: nomorid
          in: path
          description: ID of the workout to update
          required: true
          schema:
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Workout'
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
        '401':
          description: Unauthorized - Admin not logged in
        '403':
          description: Forbidden - Admin does not have permission
        '404':
          description: Not Found - Workout not found
        '405':
          description: Invalid input
  /getlower:
    get:
      tags:
        - Workout Lower
      summary: Get All Workout
      description: Retrieve all workout data from the database
      operationId: getAllWorkout
      security:
        - Login: []  # Menentukan bahwa endpoint ini membutuhkan skema keamanan 'Login'
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/MobilePhone'
        '401':
          description: Unauthorized - Admin not logged in
        '403':
          description: Forbidden - Admin does not have permission
        '405':
          description: Invalid input
  /deletelower:
    delete:
      tags:
        - Workout Lower
      summary: Delete Workout by ID
      description: Delete Workout data from the database by ID
      operationId: deleteWorkout
      security:
        - Login: []  # Menentukan bahwa endpoint ini membutuhkan skema keamanan 'Login'
      parameters:
        - name: nomorid
          in: path
          description: ID of the Workout to delete
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
        '401':
          description: Unauthorized - Admin not logged in
        '403':
          description: Forbidden - Admin does not have permission
        '404':
          description: Not Found - Workout not found
        '405':
          description: Invalid input

components:
  schemas:
    user:
      type: object
      properties:
        username:
          type: string
          example: edi
        email:
          type: string
          example: farhan@gmail.com
        height:
          type: float64
          example: 175
        weight:
          type: float64
          example: 73
        age:
          type: float64
          example: 27
        password:
          type: string
          example: edi12345
    AdminAuth:
      type: object
      properties:
        email:
          type: string
          example: farhan@gmail.com
        password:
          type: string
          example: akurijik
    Workout:
      type: object
      properties:
        number_id:
          type: integer
          example: 5
        name:
          type: string
          example: Push UP
        gif:
          type: string
          example: https://example.com/pushup.gif
        repetition:
          type: string
          example: 15
        calories:
          type: integer
          example: 50
    Response:
      type: object
      properties:
        status:
          type: bool
          example: true
        message:
          type: string
          example: Berhasil Input data
    responseUser:
      type: object
      properties:
        status:
          type: bool
          example: true
        message:
          type: string
          example: berhasil ambil data
        data:
          type: object
          properties:
            username:
              type: string
              example: farhan
            password:
              type: string
              example: hashed password
            role:
              type: string
              example: user
    Auth:
      type: object
      properties:
        username:
          type: string
          example: farhan
        password:
          type: string
          example: akurijik
    AuthResponse:
      type: object
      properties:
        status:
          type: bool
          example: false
        message:
          type: string
          example: Selamat Datang
        token:
          type: string
          example: akurijik
  requestBodies:
    AuthReq:
      description: Request Authentication
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Auth'
    AdminAuthReq:
      description: Request Admin Authentication
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/AdminAuth'
    MobilePhoneReq:
      description: Request Mobile Phone Insertion
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/MobilePhone'
    UserArray:
      description: List of user object
      content:
        application/json:
          schema:
            type: array
            items:
              $ref: '#/components/schemas/AuthResponse'
  securitySchemes:
    Login:
      type: apiKey
      name: Login
      in: header
